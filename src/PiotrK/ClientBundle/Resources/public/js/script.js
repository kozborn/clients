// Generated by CoffeeScript 1.8.0
(function() {
  var Clients,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  jQuery(document).ready(function($) {
    var clients;
    return clients = new Clients;
  });

  Clients = (function() {
    Clients.prototype.inputs = null;

    Clients.prototype.button = null;

    Clients.prototype.container = null;

    Clients.prototype.url = null;

    Clients.prototype.paginator = '.paginator';

    Clients.prototype.datetime = '.datetime';

    Clients.prototype.deleteLink = '.delete';

    Clients.prototype.messageContainer = '#message-container';

    Clients.currentPage = 1;

    function Clients() {
      this.removeClient = __bind(this.removeClient, this);
      this.search = __bind(this.search, this);
      this.setCurrentPage = __bind(this.setCurrentPage, this);
      this.inputs = $('input');
      $(this.datetime).datepicker({
        dateFormat: "yy-mm-dd"
      });
      this.button = $('button#search-result');
      this.container = $('#report-container');
      this.url = this.inputs.parents('form').attr('action');
      this.bindLinks();
      this.inputs.bind('keyup', this.search);
      this.inputs.bind('change', this.search);
      this.button.bind('click', this.search);
    }

    Clients.prototype.bindLinks = function() {
      $(this.paginator).find('a').bind('click', this.setCurrentPage);
      return $(this.deleteLink).bind('click', this.removeClient);
    };

    Clients.prototype.setCurrentPage = function(e) {
      e.preventDefault();
      this.currentPage = $(e.target).data('page');
      return this.search(e);
    };

    Clients.prototype.search = function(e) {
      var values;
      e.preventDefault();
      values = {};
      values.page = this.currentPage;
      this.inputs.each((function(_this) {
        return function(index, item) {
          if (item.value) {
            return values[$(item).attr('name')] = item.value;
          }
        };
      })(this));
      return this.post = $.ajax({
        url: this.url,
        type: "POST",
        data: values
      }).done((function(_this) {
        return function(response) {
          _this.container.html(response);
          return _this.bindLinks();
        };
      })(this)).fail((function(_this) {
        return function(jqHXR, response) {
          return console.log(response);
        };
      })(this));
    };

    Clients.prototype.removeClient = function(e) {
      var deleteUrl;
      e.preventDefault();
      deleteUrl = $(e.target).attr('href');
      $(e.target).parent('tr').hide();
      return this.post = $.ajax({
        url: deleteUrl,
        type: "POST"
      }).done((function(_this) {
        return function(response) {
          $('.message-container').show();
          $('.message-container').html($.parseJSON(response).message);
          _this.search(e);
          return setTimeout(function() {
            return $('.message-container').fadeOut();
          }, 1000);
        };
      })(this)).fail((function(_this) {
        return function(jqHXR, response) {
          return console.log(response);
        };
      })(this));
    };

    return Clients;

  })();

}).call(this);
